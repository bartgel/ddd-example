import{_ as e,l as o,I as i,d as n,K as p}from"./mermaid.core.C-uzZXkM.js";import{p as g}from"./treemap-75Q7IDZK.DrhjVq_n.js";import"./preload-helper.D_1diwkG.js";import"./_commonjsHelpers.Cpj98o6Y.js";import"./transform.BcRQlmJM.js";import"./_baseUniq.BHsGxCbJ.js";import"./_basePickBy.B-r6Qg_r.js";import"./clone.C7JUcOP4.js";var d={parse:e(async r=>{const a=await g("info",r);o.debug(a)},"parse")},m={version:p.version+""},v=e(()=>m.version,"getVersion"),c={getVersion:v},l=e((r,a,s)=>{o.debug(`rendering info diagram
`+r);const t=i(a);n(t,100,400,!0),t.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${s}`)},"draw"),f={draw:l},E={parser:d,db:c,renderer:f};export{E as diagram};
